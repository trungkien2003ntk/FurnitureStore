@using FurnitureStore.Client.IServices
@using FurnitureStore.Client.Shared.Customer
@using FurnitureStore.Shared.Responses
@inject NavigationManager navManager
@inject ICategoryService CategoryServiceDI
@inject NavigationManager navManager

<header class="">
	<nav class="navbar navbar-expand-lg grid">
		<div class="container">
			<button class="navbar-brand" href="" @onclick="navigateHome"><h2>Sixteen <em>Furnishings</em></h2></button>
			<!-- <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
			  <span class="navbar-toggler-icon"></span>
			</button> -->
			<form class="nav-form" action="">
				<input class="header-search-text" type="search" placeholder="Search" @onkeydown="@Enter" @bind="InputValue" @bind:event="oninput">
				<button class="header-search-btn">
					<span class="material-symbols-outlined">
						search
					</span>
				</button>
			</form>
			<div class="nav-item-container">
				<div @onclick="ShowCart">
					<img class="nav-item-pointer" src="https://hasaki.vn/images/graphics/icon_header_1.svg" alt="">
				</div>
			</div>

		</div>
		<div class="collapse navbar-collapse" id="navbarResponsive">
			<ul class="navbar-nav ml-auto">
				<li class="nav-item active">
					<a class="nav-link" href="index.html">
						Home
						<span class="sr-only">(current)</span>
					</a>

				</li>
				
				@foreach (var categoryL1 in categoryList)
				{
					<li class="nav-item" @onclick="@(e => navigateFilter(@categoryL1.Category.Id))">
					<a class="nav-link" href="products.html">
							@categoryL1.Category.Name
						<span class="material-symbols-outlined nav-link-icon-down">
							expand_more
						</span>
					</a>
						
							@if (categoryL1.SubCategories.Count > 0)
							{
								<ul class="header__nav__submenu">
								@foreach (var categoryL2 in categoryL1.SubCategories)
								{
									<li class="header__nav__list-item" @onclick="@(e => navigateFilter(@categoryL2.Category.Id))">
										<a class="category-L3-link">@categoryL2.Category.Name</a>
										@if (categoryL2.SubCategories.Count > 0)
										{

											<ul class="header__nav__sub-sub-menu">
												@foreach (var categoryL3 in categoryL2.SubCategories)
												{
													<li class="header__nav__list-item" @onclick="@(e => navigateFilter(@categoryL3.Category.Id))">
															<a href="">@categoryL3.Category.Name</a>
													</li>
												}
											

											</ul>
										}

									</li>
								}
								</ul>
							}

					
				</li>
				
				}

				<li class="nav-item">
					<a class="nav-link" href="/aboutUs">About Us</a>
				</li>
				<li class="nav-item">
					<a class="nav-link" href="contact.html">Contact Us</a>
				</li>
			</ul>
		</div>
	</nav>
	@if (showCart)
	{
		<Cart ShowCartChanged="@((args)=> UpdateShowCart(args.Item1,args.Item2))" />

	}
</header>

@code {
	private string? InputValue { get; set; }
	private IEnumerable<CategoryResponse> categoryList;
	 void UpdateShowCart(bool newShowCartValue, string navigatePage)
	{
		
		if (navigatePage == "checkout")
			navManager.NavigateTo("/checkout", forceLoad: false);
			showCart = newShowCartValue;

	}
	bool showCart = false;
	private void ShowCart()
	{
		showCart = true;
	}
	void navigateHome()
	{
		navManager.NavigateTo("/", forceLoad: false);
	}
	public void Enter(KeyboardEventArgs e)
	{
		if (e.Code == "Enter" || e.Code == "NumpadEnter")
		{
			navManager.NavigateTo("/search" + "/" + InputValue);


		}
	}
	protected override async Task OnInitializedAsync()
	{
		categoryList = await CategoryServiceDI.GetAllCategoryResponsesWithNestedResult();
	}
	void navigateFilter(string categoryId)
	{
		navManager.NavigateTo("/filter" + "/" + categoryId);
	}

}
